<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk.Web">
	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<SpaRoot>ClientApp\</SpaRoot>
		<SpaProxyServerUrl>https://localhost:44498</SpaProxyServerUrl>
		<SpaProxyLaunchCommand>npm run dev</SpaProxyLaunchCommand>
	</PropertyGroup>
	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.5" />
		<PackageReference Include="Microsoft.Data.Sqlite" Version="6.0.5" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="6.0.5" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.5">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="6.0.5" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="6.0.5">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
	</ItemGroup>
	<ItemGroup>
		<Folder Include="Controllers\" />
		<Folder Include="Data\" />
		<Folder Include="Domain\" />
		<Folder Include="Data\Models\" />
	</ItemGroup>
	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
		<None Remove="Controllers\" />
		<None Remove="Microsoft.Data.Sqlite" />
		<None Remove="Microsoft.EntityFrameworkCore.Sqlite" />
		<None Remove="Microsoft.EntityFrameworkCore.Design" />
		<None Remove="Data\" />
		<None Remove="Domain\" />
		<None Remove="Microsoft.EntityFrameworkCore.SqlServer" />
		<None Remove="Microsoft.EntityFrameworkCore.Tools" />
		<None Remove="Data\Models\" />
	</ItemGroup>
	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<!--	Generate a new SSL certificate. command prestart ist defined in package.json	-->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run prestart" />
	</Target>
	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<ResolvedFileToPublish Include="@(DistFiles-&gt;'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>
</Project>